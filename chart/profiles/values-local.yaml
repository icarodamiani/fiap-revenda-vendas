image:
  name: vendas
  repository: "icarodamiani/fiap-revenda-vendas"
  pullPolicy: IfNotPresent
  tag: "latest"

replicaCount: 1
imagePullSecrets: [ ]
nameOverride: "vendas"
fullnameOverride: "vendas"

service:
  type: ClusterIP
  port: 8080

ingress:
  enabled: false

resources: { }
podAnnotations: { }
podSecurityContext: { }
securityContext: { }

autoscaling:
  enabled: false
  minReplicas: 3
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {
    "eks.amazonaws.com/role-arn": arn:aws:iam::769233459262:role/aws-node
  }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

env:
  - name: DETRAN_WEBHOOK_URL
    value: http://vendas:8080/v1/vendas/detran/receive
  - name: DETRAN_URL
    value: http://detran:8080